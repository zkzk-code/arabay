# Generated by Django 5.1.1 on 2024-10-28 14:48

import common.utils.file_upload_paths
import common.validators.image_extension_validator
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=50, verbose_name='Country')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='State')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='City')),
                ('postal_code', models.CharField(max_length=15, verbose_name='Postal Code')),
                ('address_1', models.CharField(max_length=255, verbose_name='Address Line 1')),
                ('address_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Name')),
                ('is_active', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Admin')),
                ('is_supplier', models.BooleanField(default=False, verbose_name='Is Supplier')),
                ('is_buyer', models.BooleanField(default=False, verbose_name='Is Buyer')),
                ('phone', models.CharField(default='', max_length=20, verbose_name='Phone Number')),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Added On')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Edited On')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subordinates', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_billing', to='useraccount.address', verbose_name='Billing Address')),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_shipping', to='useraccount.address', verbose_name='Shipping Address')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuyerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_account', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank account')),
                ('instapay_account', models.CharField(blank=True, max_length=50, null=True, verbose_name='Instapay account')),
                ('electronic_wallet', models.CharField(blank=True, max_length=50, null=True, verbose_name='Electronic wallet')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=common.utils.file_upload_paths.buyers_profile_pictures_path, validators=[common.validators.image_extension_validator.image_extension_validator], verbose_name='Profile Picture')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='useraccount.buyerprofile')),
            ],
            options={
                'unique_together': {('user_profile', 'product')},
            },
        ),
        migrations.AddField(
            model_name='buyerprofile',
            name='favorite_products',
            field=models.ManyToManyField(related_name='favorited_by', through='useraccount.Favorite', to='product.product'),
        ),
        migrations.CreateModel(
            name='SupplierDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('front_id', models.FileField(upload_to=common.utils.file_upload_paths.suppliers_documents_path, verbose_name='Front side of ID')),
                ('back_id', models.FileField(upload_to=common.utils.file_upload_paths.suppliers_documents_path, verbose_name='Back side of ID')),
                ('tax_card', models.FileField(upload_to=common.utils.file_upload_paths.suppliers_documents_path, verbose_name='Tax card')),
                ('commercial_record', models.FileField(upload_to=common.utils.file_upload_paths.suppliers_documents_path, verbose_name='Commercial Record')),
                ('bank_statement', models.FileField(upload_to=common.utils.file_upload_paths.suppliers_documents_path, verbose_name='Bank statement')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupplierProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_account', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank account')),
                ('instapay_account', models.CharField(blank=True, max_length=50, null=True, verbose_name='Instapay account')),
                ('electronic_wallet', models.CharField(blank=True, max_length=50, null=True, verbose_name='Electronic wallet')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=common.utils.file_upload_paths.suppliers_profile_pictures_path, validators=[common.validators.image_extension_validator.image_extension_validator], verbose_name='Profile Picture')),
                ('documents', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_documents', to='useraccount.supplierdocuments')),
                ('entity_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entity_address', to='useraccount.address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
